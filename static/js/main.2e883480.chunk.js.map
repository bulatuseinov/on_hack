{"version":3,"sources":["panels/Home.js","panels/Persik.js","panels/QrScaner.js","App.js","index.js","img/persik.png"],"names":["Home","_ref","id","go","fetchedUser","qrData","react_default","a","createElement","es6","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","platform","osname","Scaner","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","qrtype","connect","send","left","IOS","chevron_back_default","back_default","className","persik","alt","data","React","Component","App","e","setState","activePanel","currentTarget","dataset","to","_this2","subscribe","detail","type","console","log","panels_Home","QrScaner","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"gRA2CeA,SAvCF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAIC,EAAPF,EAAOE,GAAIC,EAAXH,EAAWG,YAAaC,EAAxBJ,EAAwBI,OAAxB,OACZC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOP,GAAIA,GACVI,EAAAC,EAAAC,cAACC,EAAA,EAAD,gBACCL,GACDE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,MAAM,qCACZJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACCE,OAAQP,EAAYQ,UAAYN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQI,IAAKT,EAAYQ,YAAe,KACxEE,YAAaV,EAAYW,MAAQX,EAAYW,KAAKL,MAAQN,EAAYW,KAAKL,MAAQ,IAFpF,GAAAM,OAIKZ,EAAYa,WAJjB,KAAAD,OAI+BZ,EAAYc,aAI5CZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,MAAM,sBACZJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACCH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQU,KAAK,KAAKC,MAAM,IAAIC,QAASlB,EAAImB,UAAQ,UAAjD,+BAIDhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,QAAAO,OACKX,8DChBOkB,8BCETC,UAASD,eA4CAE,cAzCb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXR,MAAOA,EACPrB,OAAQ,IACR8B,OAAQ,IACR/B,YAAa,KAPCuB,mFAYhBS,IAAQC,KAAK,mDAIb,OACE/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOP,GAAI4B,KAAKJ,MAAMxB,IACtBI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACC6B,KAAMhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcY,QAASS,KAAKJ,MAAMvB,GAAImB,UAAQ,QAClDE,IAAWe,IAAMjC,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,MAAuBD,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,QAF3C,UAOAD,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,SAAS7B,IAAK8B,IAAQC,IAAI,mBACvCtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,MAAM,mCACXJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,eAAAO,OACac,KAAKe,gBA7BPC,IAAMC,WCwCZC,cA1Cd,SAAAA,EAAYtB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkB,IAClBrB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoB,GAAAf,KAAAH,KAAMJ,KA2BPvB,GAAK,SAAC8C,GACLtB,EAAKuB,SAAS,CAAEC,YAAaF,EAAEG,cAAcC,QAAQC,MA1BrD3B,EAAKO,MAAQ,CACZiB,YAAa,OACb/C,YAAa,KACbC,OAAQ,MANSsB,mFAUC,IAAA4B,EAAAzB,KACnBM,IAAQoB,UAAU,SAACP,GAClB,OAAQA,EAAEQ,OAAOC,MAChB,IAAK,4BAIL,IAAK,uBACJH,EAAKL,SAAS,CAAE9C,YAAa6C,EAAEQ,OAAOZ,OACtCc,QAAQC,IAAIX,EAAEQ,OAAOC,MACrB,MACD,QACCC,QAAQC,IAAIX,EAAEQ,OAAOC,SAGxBtB,IAAQC,KAAK,sBAAuB,qCAQpC,OACC/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM0C,YAAarB,KAAKI,MAAMiB,aAC7B7C,EAAAC,EAAAC,cAACqD,EAAD,CAAM3D,GAAG,OAAOE,YAAa0B,KAAKI,MAAM9B,YAAaD,GAAI2B,KAAK3B,KAC9DG,EAAAC,EAAAC,cAACsD,EAAD,CAAQ5D,GAAG,SAASC,GAAI2B,KAAK3B,GAAI0C,KAAMf,KAAKI,MAAM7B,iBArCpCyC,IAAMC,WCAxBX,IAAQC,KAAK,eAAgB,IAQ7B0B,IAASC,OAAO1D,EAAAC,EAAAC,cAACyD,EAAD,MAASC,SAASC,eAAe,6BCjBjDC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.2e883480.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser, qrData }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"scaner\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\t{`${qrData}`}\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\n// import './Persik.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport {Panel, Group, Div, PanelHeader, HeaderButton, ListItem, platform, IOS} from '@vkontakte/vkui';\nimport './Persik.css';\nimport persik from '../img/persik.png';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport PropTypes from 'prop-types';\n\nconst osname = platform();\n\nclass Scaner extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      props: props,\n      qrData: 111,\n      qrtype: 111,\n      fetchedUser: 111,\n    };\n  }\n\n  componentDidMount(){\n    connect.send('VKWebAppOpenQR');\n  }\n\n  render(){\n    return (\n      <Panel id={this.props.id}>\n    \t\t<PanelHeader\n    \t\t\tleft={<HeaderButton onClick={this.props.go} data-to=\"home\">\n    \t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n    \t\t\t</HeaderButton>}\n    \t\t>\n    \t\t\tPersik\n    \t\t</PanelHeader>\n    \t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n        <Group title=\"QR Data Fetched with VK Connect\">\n          <ListItem>\n            {`DDDATA ${this.data}`}\n          </ListItem>\n        </Group>\n    \t</Panel>\n    );\n  }\n}\n\nScaner.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired\n};\n\nexport default Scaner;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Scaner from './panels/QrScaner';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t\tqrData: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VKWebAppOpenQRResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t<Scaner id=\"scaner\" go={this.go} data={this.state.qrData}/>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}